8C: Planar Shadows

[no links]

--2-- File 43
Rendering planar shadows is relatively simple, although not very useful.  The concepts however, are worth exploring.  We will cover them in this video.

--3-- File 44
The interactive shadow techniques we will cover are listed here.

In this video, we focus solely on planar shadows.

In the next video, we discuss shadow volumes, a clever technique.

Then, the most used shadow technique, shadow maps.

Finally, we will mention a few other techniques without going into much detail.

--4-- File 45
Here is an example displaying the function of planar shadow projection. See how the shadow is in the shape of the flamingo. Also notice the sharpness of the shadow.

--5-- File 46
Shadow projection draws objects onto a plane. This essentially renders dark polygons transformed in such a way that they are projected onto the target plane. 

The plane is usually a ground plane, and this technique is effective so long as objects do not project shadows onto other objects.

This technique has issues with aliasing, properly handling multiple shadow projections onto the same positions, and does not work on non-planar objects.

--6-- File 47
The projection matrix for transforming world coordinates on the ground plane, where z equals zero, is shown here. You may recognize this a shear transformation.  You may also notice the third row having all zeros; that scales the points to the ground plane.

This is a simplified projection onto a plane.  The generic form is shown in a few slides.

--7-- File 49
The process then for rendering shadows onto a plane is as follows.  First, you render the scene normally. Then, you set up the shadow parameters, which includes deriving the plane transformation and setting shadow color, and most likely enabling blending. You also want to disable the depth writing, as you will want to test against the z-buffer, but your new polygons should not update the depth value. Finally, you render the shadowing objects.

--8-- File 51
Projecting an object onto a plane using a point light is similar, in concept, to a perspective projection. One major difference, however, is that you do not want to scale the projection into a -1 to 1 box. You will also notice that the diagonals of the matrix all use the plane solution.

--9-- File 52
This code snippet may help to understand exactly how to set up the projection matrix for both point and directional light sources.

--10a-- File 54
Planar shadows have multiple issues that should be addressed.

The first is that the algorithm assumes an infinite plane. That, however, can be solved using a stencil buffer operation.

The second is that if casting multiple shadows, this could lead to some depth buffer fighting. That can be solved using a polygon offset, which I describe on the next slide.

--10b-- File 58
Finally, blending multiple shadow colors with the framebuffer colors can lead to inaccurate results.  The best solution to this problem is to use a stencil buffer to indicate once a pixel has already been shadowed and avoid any future shadow blending.

You can see the two images at the bottom here with the problems on the left, and those same problems solved on the right.

These are all relatively easy to solve, but they are annoying. And given the other limitations with the algorithm, make planar projection shadows not optimal outside of simple scenes.

--11-- File 59
I mentioned using a polygon offset on the previous slide.  This is a common solution to several problems that arise in shadow algorithms.

The function call and description, seen here, are easy to follow and can be added to any application.  Just be mindful to only use it when necessary, and otherwise disable it.

--12-- File 60
This slide walks through the stencil buffer logic to prevent multiple blending while rendering planar shadows.

Basically, you set the stencil buffer to zero before rendering, then set the stencil buffer to 1 as you draw the plane. While drawing the shadows, if the stencil value is 1, then you draw the shadow and set the value to 2.  Otherwise, the fragment is discarded.

--13-- File 63
As I mentioned earlier in this video, it is possible to project shadows onto any plane. And, you can clip shadows to any polygon shape. Theoretically, you could use planar shadows on all of the objects in your scene.However, once you address all problems that arise with the sorting, distance testing, stencil writing, and so forth, the solution quickly becomes infeasible.

This concludes this video.
