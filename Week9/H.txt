--2--
In this video, we will focus on just a few image-based effects. 

--3--
Now that we have introduced multi-pass rendering and mult-texturing, there is no limit to the effects that we can implement. Listed here is short list of options that are currently being used.

We will just focus on a few topics here, namely skyboxes, sprites, billboards, and image processing techniques.

--4--
Some of the image-based effects are inspired by the continuum of rendering proposed by Lengyel.

This basically states that even though we start with physically-based geometric models, out end goal simple images. Image-based rendering starts somewhere in the middle of the spectrum, or more to the left, skipping some of the geometric-based techniques to the far right.

--5--
Skyboxes replace distant geometry with texture maps. These work well with objects infinitely far away like clouds, stars and other celestial objects, and even mountain ranges. As the camera moves, the skybox moves with it.

There are multiple ways to implement a skybox, the most common is to mimic environment cubic mapping, where the sky textures are on the interior of a large box that wraps the entire scene. Another is to map an equirectangular image onto the inside of a sphere that again, wraps the entire scene.

The skybox looks best if the texture resolution approximately equals the screen resolution when rendered.

--6--
Sprites are very a common form of texture mapping. These are used in place of polygons.

A sprite refers to a rectangle with a decal texture mapped to it. These are most often used in 2D graphics applications. Sprites most often have transparency applied and are rendered in layers, from back to front to ensure the blending operation functions correctly. This method mimics cel animation used in cartoons.

Sprites are also used in 3D applications, but often go by a different name depending on how they are used.

--7--
Billboarding is a type of sprite used in #d applications where the sprite is placed in the scene, and updated every frame to be oriented towards the camera. This gives the illusion that the geometry has the same shape no matter the viewing angle.

Distant complex geometry is often rendered this way because of the performance gain and the very small impact on realism.

You may also see references to objects called imposters. An imposter is an extension of a billboard, but instead of using an image file for the texture, the image is created by the application where the geometry is rendered to a frame buffer object with texture memory, and that texture is used as the input for the billboard.

--8--
The technique to implement a billboard is to create a quad that is perpendicular to the ground plane with a transparency-enabled texture. The quad is updated to be oriented towards the camera every time the camera updates its position.

The math for this is very simple, rotating the quad on the z-axis by the dot product of the normal vector of the quad with the vector from the quad center to the view reference point (in world coordinates). The dot product gives you the smallest angle, so depending on the viewing location, you may need to rotate by the negative angle. It may take some trial and error to get this right in your application.

Since a billboarding mimics a cylindrical object, this method works best on geometry that is cylindrically symmetric.

The method does not work so well when viewing the billboard from above or below, so this is not a perfect solution.

--9--
Lastly, I would like to touch on post processing effects.

It is not uncommon to have an effect that is independent of the scene geometry but overlays the final image for the frame. Examples of this include raindrops on the camera lens, light glare, motion blur, and so forth.

Some effects a simple overlays, like a vignette effect, but most others require some distortion of the final image. The way to do this is to render to a framebuffer object, backed by texture memory, and use the output as the texture input for another rendering pass. This can be done in simple 2D space. 

You could then apply blur the image, or run it through an edge detector and use that output for another pass to overlay be the final image, or do a bloom affect where the light from some bright objects in the scene bleed into the surrounding pixels.

--10--
This is an example of the bloom effect.

This concludes this video.
