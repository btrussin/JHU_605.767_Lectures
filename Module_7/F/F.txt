
7F: Fog

https://user.xmission.com/~nate/tutors.html [Fog Tutorial]


--2-- File 90
In this video, we discuss a common technique known as fog.

--3a-- File 91
Fog is a general term in computer graphics that describes various atmospheric effects such as fog, haze, smoke, mist, or pollution. The effect is that objects further away fade into the color of the fog. The effect is generated by blending the fog color with the object color based on distance of the object from the camera.

Fog can be an important feature in outdoor scenes and visualizations. It can be especially important for flight simulators. Fog also provides an important depth cue. It can aid in perceiving how far an object is from the viewer. Objects further away will be faded or blended more with the color of the fog.

--3b-- File 92
Fog is not the same as attenuation, though they are sometimes confused. Attenuation lowers the intensity of light reaching surfaces and depends on the distance of the surface from the light source. Fog essentially lowers the intensity of light reflected from the object surfaces that reaches the viewer and depends on the distance of the object from the viewer. The light reflected from the object becomes blended with light being reflected from particles in the atmosphere, which also reach the viewer.

--4-- File 93
This is an image of a tool for testing different fog parameters using OpenGL. Although the legacy OpenGL fog functions have been deprecated, the simplicity and effectiveness of its implementation serves as a good framework for your own work.

--5-- File 94
Here are the function calls that setup and rendered fog in legacy OpenGL.

--6a-- File 95
Legacy OpenGL had three different methods available for computing the fog factor based on input options. The easiest to use is a linear-based fog. Here, a start distance and an end distance are provided. The fog factor is 0 for distances less than the start distance and is 1 for distances greater than the end distance, where objects are assumed to be totally obscured by the fog. In-between the two distances, the fog factor varies linearly.

The other 2 fog factors use a fog density factor that is used within an exponential function or within an exponential squared function. These 2 types of fog generally give a better effect, but are somewhat harder to find the proper density factor to use.

--6b-- File 96
Fog can be implemented within either the vertex or fragment shader, preferably wherever you are doing the lighting computations. Since the distance from the camera to the point where reflection is being computed is needed for the fog equation, all you need to do is compute the length of the vector V, which has already been generated and used within the shaders to compute specular reflection. You would then blend the color from the reflection equation with the color of the fog using the fog factor that was computed.

This concludes this video.
