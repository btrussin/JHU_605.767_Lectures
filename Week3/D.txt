--2--
This last video in this module covers a few advanced ray tracing techniques.

--3--
We will discuss anti-aliasing in ray tracing, which is probably easier than you may think; distributed ray tracing which traces volumes rather than rays and builds on anti-aliasing; and forward ray tracing and photon mapping, which is necessary to produce some advanced light features.

--4--
Often, anti-aliasing can be achieved by multi-sampling. It turns out that this is easy to do in ray tracing.  This is ofter reffered to as super sampling in ray tracing. 

Until now we have only proposed a single ray for each pixel in the view plane. That ray originates at the eye position and passes through the center of the pixel. This produces some jaggedness especially as rounded objects are encountered in the scene.  

A simple, but effective method to combat this is to shoot the rays through the corners of the pixels instead of the centers. Then each pixel color is an average of the colors at the four corners. This requires only one additional row and column of ray samples, increasing the number of rays by a relatively small number. The corner colors are shared between neighboring pixels, of course.

--5--
A common variation of the corner method shoots one additional ray through the center, then combines all five for the final color.

This requires almost twice as many rays, but produces a more accurate result.

To do this, you could shoot two rays per pixel, one at the center, and the other at the top left corner. You would need to do this for each pixel, plus the far right colomn and bottom row.

Also, you could weight each of the five samples evenly, or unevenly as described at the bottom of this slide. It might be worth it to try different to see what produces the best results for your rendered scenes.

--6--
A common optimization that will achieve the high accuracy of multi-sampling and save on processing time is called adaptive super-sampling. Instead of sampling the center of the pixel as part of the main process, you sample all the corners on your first pass. Then, if all four corners are the same color, or nearly the same based on some threshold, there is no need to sample the image for the center; you can just set it as the average of the four corners.  Otherwise, you would shoot an additional ray and combine them accordingly.  This is especially useful for scenes that have large regions that are the same, or very similar colors.

You can also extend this further subdividing each pixel unto subregions, performing additional threshold checks and shooting additional rays.

I have experimented with adaptively shooting up to 25 samples per pixel, and have been pretty satisfied with the results. 

--7--
Distributed ray tracing uses beam or cone volumes instead of infinitely thin rays to find intersections in the scene. A beam is a pyramid emanating from a point, and cone tracing uses cones emanating from a point.

Intersection methods are more complex but handle multi-sampling for anti-aliasing and make a number of other effects possible.

--8--
Ray tracing produces hard edges and shadows as we have seen.  Multi-sampling helps to reduce the hard transitions but still produces visible edges and transitions, even if they are softer.

Distributed ray tracing techniques produce better soft shadows, blurred reflections and refractions, motion blur, and depth of field effects.

--9--
Distributed ray tracing involves supersampling, but instead of using regular intervals, it can use a stochastic, or random, distribution of rays. And, based on the results, additional rays can be spawned based on sections with high color variance.

Since we intersect beam and cone volumes, we get intersecting regions on objects instead of individual points. With these regions, we can evenly distribute reflected and refracted rays across the region and blend the samples accordingly.

Same with shadow feelers. They can be distributed over the region instead of at individual points.

You can also sample the camera lens to produce depth of field effects, and sample over time to produce motion blur.

--10--
Earlier, we briefly mentioned forward versus backward ray tracing. Backward ray tracing is what we have been doing thus far, tracing rays from the eye backward into the scene. 

Forward ray tracing follows the rays emitted from the light source into the scene until the reach the viewer. Since most light eminating from light sources never reach the viewer, this method is generally impractical.

--11--
Semi-transparent, or translucent, objects can add color to an object instead of just deciding whether or not it is blocking incident light. This can produce colored shadows.

This accounts for the changes in the radiance of the light from the source to the object. The light can pass throught multiple objects and be attenuated at different wavelengths.

This may not be practical to employ in a ray tracer for general purposes, but can produce interesting effects if employed in the right scenes.

--12--
Caustic effects are formed when light passes through various materials and get bent or redirected towards the viewer. There is no way to account for these effects in with our backward ray tracer because we only consider rays directly from the objects to light sources and perfectly reflected and refracted rays. Caustic effects follow rays of light from the light source, pass through translucent objects and get redirected, then eventually find their way to the viewer, maybe.

Photon mapping needs both forward and backward ray tracing to consider reasonable light paths that may reach the viewer.

All these methods are expensive and somewhat complex, but add realism that we have not been able to render before now.

This concludes this video.
