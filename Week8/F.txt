--2--
In this video, we introduce a few other shadow techniques, and give a summary of what we have discussed so far in this module.

--3--
Lighting and shadows can be pre-calculated and stored for quick access in the scene using textures in a method typically called baking. The lighing and shadow texture values are accessed during the fragment phase and blended with the surface color or texture.

The one big advantage to this method is that the complex lighting and shadow features that you get from Ray tracing and radiosity can be accessed in real time applications.

The main disadvantage is that baked lighting and shadows are not dynamic, so this method only really works in static scenes.

--4--
An extension of the planer projection shadows we discussed earlier is a technique where you essentially project a shadow texture onto other other objects.

The texture is created in a similar manner as a shadow map, but instead of rendering depth of values, you actually render a black-and-white image, where black is the occluding object, and everything else is white.

All receiving objects' vertices must have texture coordinates for the shadow image. That should be a pre-process.

This method does not work well for complex or dynamic scenes. Also, you have to differentiate occluding objects from receiving objects.

--5--
A method developed by Heckbert and Herf renders soft shadows using a technique similar to projected shadow textures, except you have a texture for each receiving object and light source combination.

The method emphasizes the use of area lights, or at least multiple sample points per light source.

For each receiving object and light source, you project each occluding object onto the receiver's shadow texture, which gets rendered with the receiver.

This is a relatively fast method, but does not quite have real-time effieciency for anything other than simple scenes.

--6--
There are many other methods for rendering soft shadows. Brotman and Badler published a method in 1984 and the Heckbert-Herf method is very similar to it, using an accumulation method and blending.

You could spend many hours poring over white papers describing all kinds of methods. They seem to share a number of common themes, so I don't that there is any one method that stands out. Familiarity with these methods is worthwhile if you plan to implement some form of soft shadows in your application.

--7--
In summary, shadow maps are probably the most effective shadow method for real time applications. Shadow volumes were used quite often, but have largely been replaced with shadow maps. Shadow projection still has its place due to its simplicity, but is not heavily used because of its limitations.

I think we are still waiting for a good hardware solution for generating real-time shadows, but support for various methods has improved over the years.

And graphics APIs still don't have a standard for real-time shadows either.

--8--
Listed here are good resources for exploring these topics further.

This concludes this video.

